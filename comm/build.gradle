plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
//    id 'walle'
}
apply from: "$rootDir/config.gradle"
android {
    compileSdk versions.compileSdk

    defaultConfig {
        minSdk versions.minSdk
        targetSdk versions.targetSdk

        testInstrumentationRunner versions.testInstrumentationRunner
        consumerProguardFiles versions.consumerProguardFiles

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", '"https://test.todoapp.cn/"')
            buildConfigField("String", "HEALER_META_APP_ID", '"b08eeb94a7ac45e8ae311b9e2cd01ad8"')
            buildConfigField("String", "HEALER_META_APP_KEY", '"e565f1b71c134c8cb256d4bfde713cab"')
            buildConfigField("String", "TENCENT_CAPTCHA_APP_ID", '"2053608214"')
            buildConfigField("String", "BASE_WEB_URL", '"https://www.healerapp.cn/"')
            buildConfigField("String", "QINIU_CDN", '"https://test.cdn.sbnh.cn/"')
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", '"https://test.todoapp.cn/"')
            buildConfigField("String", "HEALER_META_APP_ID", '"b08eeb94a7ac45e8ae311b9e2cd01ad8"')
            buildConfigField("String", "HEALER_META_APP_KEY", '"e565f1b71c134c8cb256d4bfde713cab"')
            buildConfigField("String", "TENCENT_CAPTCHA_APP_ID", '"2053608214"')
            buildConfigField("String", "BASE_WEB_URL", '"https://test.todoapp.cn/"')
            buildConfigField("String", "QINIU_CDN", '"https://test.cdn.sbnh.cn/"')
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = versions.jvmTarget
    }
    viewBinding {
        enabled = true
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
    implementation "androidx.core:core-ktx:$versions.coreVersion"
    implementation "androidx.appcompat:appcompat:$versions.appcompatVersion"
    implementation "com.google.android.material:material:$versions.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintlayoutVersion"
    // implementation project(path: ':walle')
    testImplementation "junit:junit:$versions.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$versions.junitTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espressoVersion"
    /************************ Http ******************************/
    api "com.squareup.retrofit2:retrofit:$versions.retrofit"
    api "com.squareup.retrofit2:converter-gson:$versions.converter_gson"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.logging_interceptor"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$versions.adapter_rxjava2"
    api "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    api "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    api "androidx.multidex:multidex:$versions.multidex"
    implementation "com.github.JessYanCoding:AndroidAutoSize:$versions.autosize"
    api "io.github.scwang90:refresh-layout-kernel:$versions.refresh_layout_kernel"
    api "com.github.bumptech.glide:glide:$versions.glide"
    kapt "com.github.bumptech.glide:compiler:$versions.glide"
    // annotationProcessor "com.github.bumptech.glide:compiler:$versions.glide"
    implementation "com.github.bumptech.glide:okhttp3-integration:$versions.glide_okhttp"
    api "com.github.Hu12037102:KTBaseAdapter:$versions.KTBaseAdapter"
    api "com.github.Hu12037102:PermissionLoader:$versions.PermissionLoader"
    api "com.alibaba:arouter-api:$versions.arouter"
    kapt "com.alibaba:arouter-compiler:$versions.arouter"
    api "de.hdodenhof:circleimageview:$versions.circleimageview"
    //  implementation "androidx.datastore:datastore:1.0.0"
    implementation "androidx.datastore:datastore-preferences:$versions.datastore_preferences"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines_core"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines_android"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.viewmodel"
    implementation "io.github.scwang90:refresh-footer-classics:$versions.refresh_footer_classics"
    implementation "io.github.scwang90:refresh-header-material:$versions.refresh_header_material"
    api "io.github.youth5201314:banner:$versions.banner"
    api "com.github.Hu12037102:ProjectViewX:$versions.ProjectViewX"
    api "androidx.lifecycle:lifecycle-runtime-ktx:2.3.1"
    // api 'com.meituan.android.walle:library:1.1.7'
    api 'com.tencent.vasdolly:helper:3.0.4'
    api 'com.github.Hu12037102:MediaXCompress:1.2.0'
    api 'com.github.Hu12037102:InputEditText:1.1.0'
    api project(path: ':lib')
}